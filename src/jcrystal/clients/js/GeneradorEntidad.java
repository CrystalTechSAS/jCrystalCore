package jcrystal.clients.js;

import java.util.ArrayList;
import java.util.List;
import java.util.TreeSet;

import jcrystal.clients.AbsEntityGenerator;
import jcrystal.entity.types.Autogenerated;
import jcrystal.json.JsonLevel;
import jcrystal.model.server.db.EntityField;
import jcrystal.model.server.db.EntityClass;
import jcrystal.reflection.annotations.CrystalDate;
import jcrystal.reflection.annotations.entities.RelMto1;
import jcrystal.reflection.annotations.entities.RelMtoM;
import jcrystal.types.JVariable;
import jcrystal.utils.ListUtils;
import jcrystal.utils.StringUtils;
import jcrystal.utils.langAndPlats.JavascriptCode;
import jcrystal.utils.langAndPlats.delegates.JavascriptCodeDelegator;

public class GeneradorEntidad extends AbsEntityGenerator<JQueryClient> implements JavascriptCodeDelegator{
	JavascriptCode codeDelegator;
	public GeneradorEntidad(JQueryClient client) {
		super(client);
	}
	public void setCodeDelegator(JavascriptCode codeDelegator) {
		this.codeDelegator = codeDelegator;
	}
	@Override
	public JavascriptCode getDelegator() {
		return codeDelegator;
	}
	public void generateEntity(final EntityClass entidad, TreeSet<JsonLevel> levels){
		$("Entity."+entidad.name() + ".prototype = ",()->{
			if(entidad.key != null) {
				$("getKey : function()", ()->{
					if(entidad.key.isSimple()) {
						$("return this." + entidad.key.getLlaves().get(0).fieldName()+";");	
					}else {
						$("return ",()->{
							entidad.key.stream().forEach(f->{
								$(f.fieldName() + ": this." + f.fieldName() + ",");
							});
						},";");
					}
				},",");
				$("getKeyString : function()",()->{
					if(entidad.key.isSimple()) {
						$("return this.getKey();");	
					}else {
						$("return JSON.stringify(this.getKey());");
					}
				},",");
				$("getKeyBase64 : function()",()->{
					if(entidad.key.isSimple()) {
						$("return btoa(this.getKey());");	
					}else {
						$("return btoa(JSON.stringify(this.getKey()));");
					}
				},",");
				$("$convertBase64Key : function(data)",()->{
					$("return JSON.parse(atob(data));");
				},",");
			}
			if(context.input.SERVER.DEBUG.CORS && entidad.isSecurityToken()) {
				$("storeToken : function()",()->{
					$("localStorage.setItem('" + entidad.name() + "', this.token);");
					$("return this;");
				},",");
			}
			$("$convertArray : function(array)",()->{
				$("return array.map(function(object)",()->{
					$("return new Entity."+entidad.name() + "(object);");				
				},");");
			},",");
		});
		if(client.descriptor.getFields(entidad).fields.keySet().stream().anyMatch(level->level != null && levels.contains(level))) {
			$("Entity."+entidad.name() + ".Sort = ",()->{
				TreeSet<String> procesado = new TreeSet<>();
				client.descriptor.getFields(entidad).fields.forEach((level, list)->{
					if(level != null && levels.contains(level))
						list.stream().filter(f->!procesado.contains(f.name())).forEach(f->{
							procesado.add(f.name());
							String className =entidad.clase.getSimpleName()+level.baseName();
							if(f.type().is(String.class)){
								$("By"+StringUtils.capitalize(f.name())+" : function(array)",()->{
									$("array.sort(function(a,b) {return (a[\""+f.name()+"\"] > b[\""+f.name()+"\"]) ? 1 : ((b[\""+f.name()+"\"] > a[\""+f.name()+"\"]) ? -1 : 0)});");
									$("return array;");
								},",");
								$("By"+StringUtils.capitalize(f.name())+"_IgnCase : function(array)",()->{
									$("array.sort(function(a,b) {return (a[\""+f.name()+"\"].toLowerCase() > b[\""+f.name()+"\"].toLowerCase()) ? 1 : ((b[\""+f.name()+"\"].toLowerCase() > a[\""+f.name()+"\"].toLowerCase()) ? -1 : 0)});");
									$("return array;");
								},",");
							}
							else if(f.type().isJAnnotationPresent(CrystalDate.class)) {
								$("By"+StringUtils.capitalize(f.name())+" : function(array, type)",()->{
									$("if(type == 'desc')",()->{
										$("array.sort(function(a,b) {return (a[\""+f.name()+"\"] > b[\""+f.name()+"\"]) ? -1 : ((b[\""+f.name()+"\"] > a[\""+f.name()+"\"]) ? 1 : 0)});");
									});
									$else(()->{
										$("array.sort(function(a,b) {return (a[\""+f.name()+"\"] > b[\""+f.name()+"\"]) ? 1 : ((b[\""+f.name()+"\"] > a[\""+f.name()+"\"]) ? -1 : 0)});");
									});
									$("return array;");
								},",");
							}
						});
				});
			});
			$("Entity."+entidad.name() + ".MapList = ",()->{
				TreeSet<String> procesado = new TreeSet<>();
				client.descriptor.getFields(entidad).fields.forEach((level, list)->{
					if(level != null && levels.contains(level))
						list.stream().filter(f->!procesado.contains(f.name())).forEach(f->{
							procesado.add(f.name());
							String className =entidad.clase.getSimpleName()+level.baseName();
							if(f.type().is(Long.class, long.class) || f.type().isEnum()) {
								$("By"+StringUtils.capitalize(f.name())+" : function(array)",()->{
									$("return array.reduce(function(map, obj)",()->{
										$("map[obj." + f.name() + "] = obj;"); 
										$("return map;");
									},",{});");
								},",");
							}	
						});
				});
			});
			$("Entity."+entidad.name() + ".Group = ",()->{
				$("By : function(array, keyGetter)",()->{
					$("var map = new Map();");
					$("array.forEach(e=>",()->{
						$("var list = map.get(keyGetter(e));");
						$if("!list",()->{
							$("map.set(keyGetter(e), [e]);");
						});
						$else(()->{
							$("list.push(e);");
						});	
					},");");
					$("return map;");
				},",");
				$("ByArray : function(array, keyGetter)",()->{
					$("var map = new Map();");
					$("array.forEach(e=>",()->{
						$("for(key of keyGetter(e))",()->{
							$("var list = map.get(key);");
							$if("!list",()->{
								$("map.set(key, [e]);");
							});
							$else(()->{
								$("list.push(e);");
							});	
						});
					},");");
					$("return map;");
				},",");
				TreeSet<String> procesado = new TreeSet<>();
				client.descriptor.getFields(entidad).fields.forEach((level, list)->{
					if(level != null && levels.contains(level))
						list.stream().filter(f->!procesado.contains(f.name())).forEach(f->{
							procesado.add(f.name());
							if(f.type().is(Long.class, long.class) || f.type().isEnum() || f.isAnnotationPresent(RelMto1.class) || (f.getTargetEntity() != null && f.keyData != null)) {
								$("By"+StringUtils.capitalize(f.name())+" : function(array)",()->{
									if(f.getTargetEntity() != null && !f.getTargetEntity().key.isSimple())
										$("return Entity."+entidad.name()+".Group.By(array, function(e){return JSON.stringify(e."+f.name()+");});");
									else
										$("return Entity."+entidad.name()+".Group.By(array, function(e){return e."+f.name()+";});");
									
								},",");
							}else if(f.isAnnotationPresent(RelMtoM.class)) {
								$("By"+StringUtils.capitalize(f.name())+" : function(array)",()->{
									if(f.getTargetEntity() != null && !f.getTargetEntity().key.isSimple())
										$("return Entity."+entidad.name()+".Group.ByArray(array, function(e){return JSON.stringify(e."+f.name()+");});");
									else
										$("return Entity."+entidad.name()+".Group.ByArray(array, function(e){return e."+f.name()+";});");
									
								},",");
							}
						});
				});
			});
		}
		
	}
	public void generateClass(final EntityClass entidad, final TreeSet<JsonLevel> levels){
		final List<EntityField> definitiveFields = ListUtils.join(client.descriptor.getFields(entidad).get(null), new ArrayList<EntityField>(client.descriptor.getFields(entidad).get(levels.last())));
		$(entidad.name()+": function(rawObject)",()->{
			for(final EntityField f : definitiveFields){
				if(f.type().isEnum()) {
					client.requiredClasses.add(f.type());
					$ifNotNull("rawObject." + f.name(),()->{
						$("this." + f.name() + " = new Enum."+f.type().getSimpleName()+".getFromId(rawObject." + f.name() + ");");
					});
				}else if(f.type().isJAnnotationPresent(CrystalDate.class)) {
					String nombre = StringUtils.camelizar(f.type().getJAnnotation(CrystalDate.class).value().name());
					$ifNotNull("rawObject." + f.name(),()->{
						$("this." + f.name() + " = new CrystalDates."+nombre+"(rawObject." + f.name()+");");
					});
				}else if(f.getTargetEntity() != null && f.getTargetEntity().key == null) {
					$ifNotNull("rawObject." + f.name(),()->{
						$("this." + f.name() + " = new Entity." + f.type().getSimpleName() + "(rawObject." + f.name()+");");
					});
				}
				else
					$("this." + f.name() + " = rawObject." + f.name()+";");
			}
		},",");
	}
	@Override
	public void generateEntityKey(EntityClass entidad) {
		$("//"+entidad.name()+".Key");
	}
}
